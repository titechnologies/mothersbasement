<?php
$ruleOptions = $this->getRedeemableOptions();
$ruleMap = $this->getApplicableRulesMap();
$c = Mage::helper('rewards/currency');
$pid = $this->getProduct()->getId();
$pid_suffix = $this->getIdSuffix();
$show_reduced_price = true;
$show_discount_in_uses_selector = true;
$show_slider = true;
// TODO: hide the redemption drop down and show the slider with a minimum value of "0"
//$use_slider_for_single_redemption = true;
?>

<div class="divider"></div>

<script type="text/javascript">

    // Configurations ///////////////
    var show_lowest_price = <?php echo $show_reduced_price ? 'true' : 'false'; ?>;
    var show_discount_in_uses_selector = <?php echo $show_discount_in_uses_selector ? 'true' : 'false'; ?>;

    // Other PHP content ///////////////

    var original_product_price = "<?php echo $this->getOriginalPrice(); ?>";
    var rule_options = <?php echo json_encode($ruleMap); ?>;
    var base_product_id = <?php echo $pid; ?>;
    var is_configurable_product = <?php echo (int) $this->getProduct()->isConfigurable(); ?>;
    var customer_points = <?php echo ($this->getCurrentCustomer() ? json_encode($this->getCurrentCustomer()->getUsablePoints()) : "false"); ?>;
    var do_hide_old_price = false;
    var default_guest_points = <?php echo $this->getDefaultGuestPoints(); ?>;
    var ruleUses = <?php echo json_encode($this->getRuleUses()) ?>;

    var new_price_dom_id = 'product-price-<?php echo $pid; ?><?php echo $pid_suffix; ?>';
    var old_price_dom_id = 'old-price-<?php echo $pid; ?><?php echo $pid_suffix; ?>';
    var new_price_excl_tax_dom_id = 'price-excluding-tax-<?php echo $pid; ?><?php echo $pid_suffix; ?>';
    var new_price_incl_tax_dom_id = 'price-including-tax-<?php echo $pid; ?><?php echo $pid_suffix; ?>';
    var old_price_excl_tax_dom_id = 'old-price-excluding-tax-<?php echo $pid; ?><?php echo $pid_suffix; ?>';
    var old_price_incl_tax_dom_id = 'old-price-including-tax-<?php echo $pid; ?><?php echo $pid_suffix; ?>';
    var slider_mode = <?php echo $show_slider ? 'true' : 'false'; ?>;
</script>

<?php if (sizeof($ruleOptions) > 0): ?>
    <script type="text/javascript">
        function updateSlider() {
            var rule_id = $('redemption_rule').value;
            if (rule_id !== "") {
                if (rule_options[rule_id]["points_action"] === "deduct_by_amount_spent") {
                    rule_options[rule_id]["amount"] = Math.ceil(getProductPriceBeforeRedemptions());
               }
            }
        }

        document.observe("dom:loaded", function() {
            // save base productPrice
            <?php if(  Mage::helper('rewards/version')->isMageVersionAtLeast('1.4.1.1')  ): ?>
                optionsPrice.productPriceBeforeRedemptions = optionsPrice.productPrice;
            <?php else:  ?>
                optionsPrice.productPriceBeforeRedemptions = optionsPrice.productPrice;
            <?php endif;  ?>

            // add listener to all form select boxes
            $$('.product-view select').each( function(e){
                e.observe("change", function(e) {
                    updateSlider();
                    syncWithCustomOptions();
                });
            });

            $$('.product-view select.redemption_selector').each( function(e){
                e.observe("change", function(e) {
                    updateSlider();
                    updateUsesInterface();
                });
            });

            // add listener to all form input boxes
            $$('.product-options input').each( function(e){
                e.observe("click", function(e1) {
                    if (e.value !== "") {
                        updateSlider();
                    }
                    syncWithCustomOptions();
                });
            });

            $$('.product-options select').each( function(e){
                e.observe("click", function(e) {
                    syncWithCustomOptions();
                });
            });

            // add listener to all form textarea boxes
            $$('div.product-options textarea').each( function(e){
                e.observe("change", function(e) {
                    syncWithCustomOptions();
                });
            });

            $('redemption_rule_prev').value = $('redemption_rule').value;
        });

        function syncWithCustomOptions() {
            // save current rule uses to apply it if options selected, instead of resetting points to 0.
            var uses = $('redemption_rule_uses').value;
            rSlider = new PointsSlider('sliderHandle', 'sliderRail', 'sliderCaption', 'redemption_rule_uses');
            updateUsesInterface();
            //restore uses
            rSlider.slider.setValue(rSlider.slider.value + uses);
        }

        //Toggle product view block
        function productViewBlock(status){
            if(status === "show") {
                if ($("productView") != null) {
                    $("productView").show();
                }
            }
            if(status === "hide") {
                if ($("productView") != null) {
                    $("productView").show();
                }
            }
        }

        function updateUsesInterface() {
            if(!$('product-view-points').visible()) {
               return false
            }
            var rule_id = $('redemption_rule').value;
            if (slider_mode) {
                productViewBlock("show");
                feignPriceChange(rule_id);
                rSlider.changeRule(rule_id);
                rSlider.changeRule(rule_id); // fix creation order error in SmoothSlider.js where translateToPx() needs slider/DOM before call
                productViewBlock("hide");
            } else {
                if (formElem.id == 'redemption_rule_uses') {
                    feignPriceChange(rule_id);
                } else if (formElem.id == 'redemption_rule') {
                    updateRemptionUsesSelector(rule_id, false);
                    feignPriceChange(rule_id);
                    updateRemptionUsesSelector(rule_id, false);
                } else {
                    var val = $('redemption_rule_uses').value;
                    updateRemptionUsesSelector(rule_id, val);
                    feignPriceChange(rule_id);
                    if (formElem.id.indexOf("attribute") == 0) {
                        updateRemptionUsesSelector(rule_id, val);
                    } else {
                        updateRemptionUsesSelector(rule_id, false);
                    }
                }
            }
        }

        function getRedemptionUses() {
            var uses;
            if (slider_mode) {
                uses = rSlider.getUses();
            } else {
                uses = $('redemption_rule_uses').value;
            }
            return uses;
        }
    </script>
<?php endif; ?>

<?php   $hideDropdown = false;
    if (((!$this->getHasMultipleRules($ruleOptions )) && $this->isSliderMode($ruleOptions)) ){
        $hideDropdown = true;
    }
?>

<?php if ($this->needsLogin()): ?>
    <span class="no_points_to_spend">
        <?php
            $msg = $this->__("You need to [[log-in]] to use your points.");
            echo str_replace(  "[[", "<a href='".$this->getUrl('customer/account/login')."'>", str_replace("]]", "</a>", $msg)  );
        ?>
    </span>
<?php else: ?>
    <?php if ($this->customerHasUseablePoints()):?>
        <div class="redeem_section">
            <span class="use_points" <?php if($hideDropdown):?>style="display:none"<?php endif; ?>>
                <?php echo $this->__('Use Your Points') . ':'; ?>
            </span>
            <select name="redemption_rule" id="redemption_rule"
                    class="redemption_selector validate-can_use_points validate-has_enough_points" <?php if($hideDropdown):?>style="display:none"<?php endif; ?>>

                <?php /*For a single rule , select it by default */?>

                <?php if ( $this->getHasMultipleRules($ruleOptions ) ) :?>
                    <option value="" selected="selected"></option>
                <?php endif;?>
                <?php foreach ($ruleOptions as $ruleOption): ?>
                    <?php if (isset($ruleOption['rule_id'])): ?>
                        <option value="<?php echo $ruleOption['rule_id']; ?>" <?php echo $this->isSelectedRule($ruleOption['rule_id']) ? 'selected' : '' ?>>
                            <?php echo $ruleOption['caption'] . " (" . $this->__('costs') . " " . $ruleOption['points'] . ")"; ?>
                        </option>
                    <?php endif; ?>
                <?php endforeach; ?>
            </select>

            <input type="hidden" name="redemption_rule_prev" id="redemption_rule_prev" />

            <div id="redemption_rule_uses_container" class="redemption_uses_container" style="display:none;">
                <?php if ($show_slider): ?>
                    <?php echo $this->getChildHtml('points_slider'); ?>
                    <?php echo $this->getChildHtml('points_slider_js'); ?>
                <?php else: ?>
                    <select class="redemption_uses_selector" id="redemption_rule_uses" name="redemption_uses" />

                    <span class="redemption_rule_uses_caption" id="redemption_rule_uses_caption" />

                    <script type="text/javascript">
                        document.observe("dom:loaded", function() {
                            usesSelect = $('redemption_rule_uses');
                            usesCaption = $('redemption_rule_uses_caption');
                            usesContainer = $('redemption_rule_uses_container');
                        });
                    </script>
                <?php endif; ?>
            </div>
        </div>
    <?php endif;?>
<?php endif;?>