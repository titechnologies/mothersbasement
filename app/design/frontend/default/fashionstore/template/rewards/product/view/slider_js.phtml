<script type="text/javascript">

    /**
     *
     * @param rule_id
     * @return
     */
    function feignPriceChange(rule_id)
    {
        var newPrice = $(new_price_dom_id);
        var oldPrice = $(old_price_dom_id);
        var numUses = getRedemptionUses();
        if(rule_id == null) {
            rule_id = $('redemption_rule').value;
        }

        if(!show_lowest_price) { return; }

        // TODO: this should be from optionsPrice.showBothPrices
        var isShowingTwoPrices = (newPrice == null);
        if(isShowingTwoPrices) {
            var newPriceExclTax = $(new_price_excl_tax_dom_id);
            var newPriceInclTax = $(new_price_incl_tax_dom_id);
            var oldPriceExclTax = $(old_price_excl_tax_dom_id);
            var oldPriceInclTax = $(old_price_incl_tax_dom_id);
        }

        if(!isShowingTwoPrices && oldPrice == null) {
            oldPrice = newPrice.cloneNode(true);
            newPrice.up().insertBefore(oldPrice, newPrice);
            oldPrice.id = old_price_dom_id;
            oldPrice.removeClassName('price');
            oldPrice.addClassName('old-price');

            do_hide_old_price = true;
        } else if (isShowingTwoPrices && oldPriceExclTax == null) {
            oldPriceExclTax = newPriceExclTax.cloneNode(true);
            newPriceExclTax.up().insertBefore(oldPriceExclTax, newPriceExclTax);
            oldPriceExclTax.id = old_price_excl_tax_dom_id;
            oldPriceExclTax.removeClassName('price');
            oldPriceExclTax.addClassName('old-price');

            oldPriceInclTax = newPriceInclTax.cloneNode(true);
            newPriceInclTax.up().insertBefore(oldPriceInclTax, newPriceInclTax);
            oldPriceInclTax.id = old_price_incl_tax_dom_id;
            oldPriceInclTax.removeClassName('price');
            oldPriceInclTax.addClassName('old-price');

            do_hide_old_price = true;
        }

        var finalPrice = getProductPriceBeforeRedemptions();

        if(rule_id == "") {
            if(do_hide_old_price) {
                if(!isShowingTwoPrices) {
                    oldPrice.hide();
                } else {
                    oldPriceExclTax.hide();
                    oldPriceInclTax.hide();
                }
            }

            optionsPrice.productPrice = finalPrice;

            var prices = reloadPricesAfterRedemptions();
            updatePriceDisplay(prices, isShowingTwoPrices, false);
        } else {
            if(do_hide_old_price) {
                if(!isShowingTwoPrices) {
                    oldPrice.show();
                } else {
                    oldPriceExclTax.show();
                    oldPriceInclTax.show();
                }
            }
            var price_disposition = rule_options[rule_id]['price_disposition'];
            //Edited 2/24/2010 7:41:46 AM : prices that set "to_fixed" discount should also
            if(rule_options[rule_id]['discount_action'] == 'by_fixed' && rule_options[rule_id]['new_price_flt'] <= 0.0000) {
                optionsPrice.productPrice = 0;
                optionsPrice.minusDisposition = 9999999999; // hack to make sure the price stays at 0;
            } else {

                var discount = price_disposition * numUses;

                optionsPrice.productPrice = finalPrice - discount;

                // Magento 1.4.2 keeps optionsPrice.productPrice at the base price
                // this fix brings the price back to the base amount
                if(optionsPrice.optionPrices.config != undefined) {
                    // TODO: this if statement achieves nothing
                    if(optionsPrice.optionPrices.config.price != undefined) {
                        optionsPrice.productPrice = finalPrice - discount;
                    } else {
                        optionsPrice.productPrice = finalPrice - discount;
                    }
                }

            }

            var prices = reloadPricesAfterRedemptions();
            updatePriceDisplay(prices, isShowingTwoPrices, true, rule_id);
        }
    }

    function getRedemptionUses() {
        var uses;
        if(slider_mode) {
            uses = rSlider.getUses();
        } else {
            uses = $('redemption_rule_uses').value;
        }
        return (uses === "") ? 1 : parseInt(uses);
    }

    function reloadPricesAfterRedemptions()
    {
        price = parseFloat(optionsPrice.productPrice);
        priceInclTax = parseFloat(optionsPrice.productPrice) * (100 + optionsPrice.currentTax) / 100;

        if (optionsPrice.includeTax == 'true') {
            // tax = tax included into product price by admin
            var tax = price / (100 + optionsPrice.defaultTax) * optionsPrice.defaultTax;
            var excl = price - tax;
            var incl = excl*(1+(optionsPrice.currentTax/100));
        } else {
            var tax = price * (optionsPrice.currentTax / 100);
            var excl = price;
            var incl = excl + tax;
        }

        excl += parseFloat(optionsPrice.plusDisposition);
        incl += parseFloat(optionsPrice.plusDisposition);
        excl -= parseFloat(optionsPrice.minusDisposition);
        incl -= parseFloat(optionsPrice.minusDisposition);

        incl = (incl < 0) ? 0 : incl;
        excl = (excl < 0) ? 0 : excl;

        return {'includingTax': incl, 'excludingTax': excl};
    }

    function updatePriceDisplay(prices, isShowingTwoPrices, isWithPointsCaption, rule_id)
    {

        if (isShowingTwoPrices) {
            formattedPriceIncl = '';
            if (prices.includingTax > 0 || optionsPrice.displayZeroPrice) {
                formattedPriceIncl = optionsPrice.formatPrice(prices.includingTax);
            }

            formattedPriceExcl = '';
            if (prices.excludingTax > 0 || optionsPrice.displayZeroPrice) {
                formattedPriceExcl = optionsPrice.formatPrice(prices.excludingTax);
            }
        } else {
            price = optionsPrice.showIncludeTax ? prices.includingTax : prices.excludingTax;

            formattedPrice = '';
            if (price > 0 || optionsPrice.displayZeroPrice) {
                formattedPrice = optionsPrice.formatPrice(price);
            }
        }

        var newPrice = $(new_price_dom_id);
        var newPriceClone = $(new_price_dom_id+'_clone');
        var newPriceExclTax = $(new_price_excl_tax_dom_id);
        var newPriceInclTax = $(new_price_incl_tax_dom_id);

        var points_with = '';
        if (isWithPointsCaption) {
            var points_amount = rule_options[rule_id]['amount'];
            var points_currency_id = rule_options[rule_id]['currency_id'];
            var points_caption = getPointsString(points_amount * getRedemptionUses(), points_currency_id);
            points_with = " " + CAPTION_WITH + " " + points_caption;
        }

        if (!isShowingTwoPrices) {
            if(newPrice.down() != null) {
                newPrice.down().innerHTML = formattedPrice + points_with;
            } else if(newPrice.down() == null && newPrice != null) {
                newPrice.innerHTML = formattedPrice + points_with;
            } else { /*don't know where it is so just don't show the points thing.*/ }
        } else {
            if(newPriceExclTax.down() != null) {
                newPriceExclTax.down().innerHTML = formattedPriceExcl + points_with;
            } else if(newPriceExclTax.down() == null && newPriceExclTax != null) {
                newPriceExclTax.innerHTML = formattedPriceExcl + points_with;
            } else { /*don't know where it is so just don't show the points thing.*/ }

            if(newPriceInclTax.down() != null) {
                newPriceInclTax.down().innerHTML = formattedPriceIncl + points_with;
            } else if(newPriceInclTax.down() == null && newPriceInclTax != null) {
                newPriceInclTax.innerHTML = formattedPriceIncl + points_with;
            } else { /*don't know where it is so just don't show the points thing.*/ }
        }

        // TODO: use a style more akin to this for updating the values, it's much cleaner
        /*if ($(pair.value).select('.price')[0]) {
            $(pair.value).select('.price')[0].innerHTML = formattedPrice;
            if ($(pair.value+this.duplicateIdSuffix) && $(pair.value+this.duplicateIdSuffix).select('.price')[0]) {
                $(pair.value+this.duplicateIdSuffix).select('.price')[0].innerHTML = formattedPrice;
            }
        } else {
            $(pair.value).innerHTML = formattedPrice;
            if ($(pair.value+this.duplicateIdSuffix)) {
                $(pair.value+this.duplicateIdSuffix).innerHTML = formattedPrice;
            }
        }*/


        if (newPriceClone != null && newPriceClone.down() != null) {
            newPriceClone.down().innerHTML = formattedPrice;
        } else if (newPriceClone != null && newPriceClone.down() == null) {
            newPriceClone.innerHTML = formattedPrice;
        }

    }
</script>